{"is_source_file": true, "format": "Java", "description": "This file defines the Spring Security configuration for a Java backend application, setting up JWT-based stateless authentication, password encoding, request authorization, and security filters.", "external_files": ["com.example.backend.security.JwtAuthenticationFilter", "com.example.backend.service.UserService"], "external_methods": ["org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder()", "com.example.backend.service.UserService", "org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService()", "org.springframework.security.authentication.dao.DaoAuthenticationProvider.setPasswordEncoder()", "org.springframework.security.authentication.ProviderManager()", "org.springframework.security.web.SecurityFilterChain()", "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"], "published": ["SecurityConfig"], "classes": [{"name": "SecurityConfig", "description": "Configuration class that sets up security settings for JWT authentication, request authorization, and security filters in a Spring Boot application."}], "methods": [{"name": "passwordEncoder", "description": "Creates and configures a BCryptPasswordEncoder bean for password hashing."}, {"name": "userDetailsService", "description": "Provides a UserDetailsService bean based on the injected UserService."}, {"name": "authenticationManager", "description": "Sets up the AuthenticationManager with a DAO provider using UserDetailsService and password encoder."}, {"name": "filterChain", "description": "Defines the security filter chain, including CSRF disable, CORS, session management, request authorization rules, and JWT filter integration."}], "calls": ["new BCryptPasswordEncoder()", "userService", "provider.setUserDetailsService()", "provider.setPasswordEncoder()", "new ProviderManager()", "http.csrf()", "http.cors()", "http.sessionManagement()", "auth.requestMatchers()", "http.addFilterBefore()", "http.build()"], "search-terms": ["SecurityConfig", "JWT", "stateless authentication", "permitAll", "sessionManagement", "JwtAuthenticationFilter", "Authorization", "Spring Security"], "state": 2, "file_id": 7, "knowledge_revision": 85, "git_revision": "a20e488e19359f07058514311666a3cd6c1bd61a", "revision_history": [{"18": ""}, {"84": ""}, {"85": "a20e488e19359f07058514311666a3cd6c1bd61a"}], "hash": "d7677f357968c4a8271f92da062443ed", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/main/java/com/example/backend/config/SecurityConfig.java"}