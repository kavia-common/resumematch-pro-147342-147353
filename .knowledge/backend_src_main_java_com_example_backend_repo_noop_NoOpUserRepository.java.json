{"is_source_file": true, "format": "Java", "description": "Implementation of a no-operation user repository (NoOpUserRepository) for the 'no-mongo' profile, providing in-memory storage and basic CRUD operations for User objects.", "external_files": ["com/example/backend/model/User.java", "com/example/backend/repo/UserRepository.java"], "external_methods": ["com.example.backend.model.User.getId", "com.example.backend.model.User.setId", "com.example.backend.model.User.getEmail"], "published": ["NoOpUserRepository"], "classes": [{"name": "NoOpUserRepository", "description": "A repository class implementing UserRepository, providing in-memory, no-mongo-specific CRUD operations for User entities, annotated with @Repository and @Profile(\"no-mongo\")."}], "methods": [{"name": "save", "description": "Saves a User entity to the in-memory store, assigning a new UUID if the ID is null."}, {"name": "saveAll", "description": "Saves a collection of User entities to the in-memory store."}, {"name": "insert", "description": "Inserts a User entity, identical to save in this implementation."}, {"name": "insert (overloaded)", "description": "Inserts multiple User entities, identical to saveAll."}, {"name": "findById", "description": "Retrieves a User by ID, returning an Optional."}, {"name": "existsById", "description": "Checks if a User exists by ID."}, {"name": "findAll", "description": "Returns all stored Users."}, {"name": "findAll (with Sort)", "description": "Returns all Users; ignores sorting in this no-op implementation."}, {"name": "findAll (with Pageable)", "description": "Throws UnsupportedOperationException; pagination not supported."}, {"name": "count", "description": "Returns the number of stored Users."}, {"name": "deleteById", "description": "Deletes a User by ID."}, {"name": "delete", "description": "Deletes a provided User entity."}, {"name": "deleteAll", "description": "Clears all stored Users."}, {"name": "deleteAllById", "description": "Deletes Users by IDs."}, {"name": "deleteAll (with entities)", "description": "Deletes multiple Users."}, {"name": "findAllById", "description": "Finds multiple Users by their IDs."}, {"name": "findOne", "description": "Returns an empty Optional; does not support example matching."}, {"name": "findAll (with example)", "description": "Returns an empty list; example matching not supported."}, {"name": "findAll (with example and sort)", "description": "Returns an empty list; example matching not supported."}, {"name": "findAll (with example and pageable)", "description": "Throws UnsupportedOperationException; not supported."}, {"name": "count (with example)", "description": "Returns 0; example matching not supported."}, {"name": "exists", "description": "Returns false; example matching not supported."}, {"name": "findByEmail", "description": "Finds a User by email address, case-insensitive."}], "calls": ["UUID.randomUUID", "users.put", "users.get", "users.containsKey", "users.values", "users.remove", "users.clear", "users.forEach", "users.values().stream", "stream.filter", "stream.findFirst"], "search-terms": ["NoOpUserRepository", "no-mongo profile", "in-memory UserRepository", "UUID", "User", "repository implementation", "Profile annotation", "Spring Data repository"], "state": 2, "file_id": 42, "knowledge_revision": 112, "git_revision": "", "revision_history": [{"108": ""}, {"109": ""}, {"112": ""}], "hash": "8e5de5adb593d6499911855b8aa629f7", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/main/java/com/example/backend/repo/noop/NoOpUserRepository.java"}