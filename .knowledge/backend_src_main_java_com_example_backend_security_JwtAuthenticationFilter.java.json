{"is_source_file": true, "format": "Java", "description": "This Java class implements a Spring Security filter that extracts JWT tokens from HTTP Authorization headers, validates them, and sets the security context accordingly.", "external_files": ["io.jsonwebtoken.Claims", "org.springframework.security.authentication.UsernamePasswordAuthenticationToken", "org.springframework.security.core.context.SecurityContextHolder", "org.springframework.security.core.userdetails.UserDetails", "org.springframework.security.core.userdetails.UserDetailsService", "org.springframework.web.filter.OncePerRequestFilter"], "external_methods": ["io.jsonwebtoken.Claims#getSubject()", "org.springframework.security.core.context.SecurityContextHolder#getContext()", "org.springframework.security.core.context.SecurityContextHolder#getContext().setAuthentication()", "org.springframework.security.core.userdetails.UserDetails#getAuthorities()", "org.springframework.http.HttpHeaders#getAuthorization()", "org.springframework.util.StringUtils#hasText()"], "published": ["com.example.backend.security.JwtAuthenticationFilter"], "classes": [{"name": "JwtAuthenticationFilter", "description": "A Spring Security filter that processes JWT tokens from HTTP requests to authenticate users."}], "methods": [{"name": "doFilterInternal", "description": "Overrides the filter method to extract the JWT from the Authorization header, validate it, and authenticate the user if valid."}], "calls": ["org.springframework.http.HttpHeaders#getAuthorization", "io.jsonwebtoken.JwtUtil#parse", "io.jsonwebtoken.Claims#getSubject", "org.springframework.security.core.userdetails.UserDetailsService#loadUserByUsername", "org.springframework.security.authentication.UsernamePasswordAuthenticationToken#<init>", "org.springframework.security.core.context.SecurityContextHolder#getContext", "org.springframework.security.core.context.SecurityContextHolder#getContext().setAuthentication", "org.springframework.web.filter.OncePerRequestFilter#doFilter"], "search-terms": ["JwtAuthenticationFilter", "JWT token validation", "Spring Security JWT filter", "Authorization Bearer token", "SecurityContextHolder"], "state": 2, "file_id": 11, "knowledge_revision": 27, "git_revision": "", "hash": "9aa0ad09db174e48400dfe1180b9397d", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/main/java/com/example/backend/security/JwtAuthenticationFilter.java", "revision_history": [{"27": ""}]}